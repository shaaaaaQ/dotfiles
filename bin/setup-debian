#!/usr/bin/env bash
set -eu

Yn () {
    read -r -p "${1} (Y/n): " ans
    [[ $ans = [nN] ]] && return 1 || return 0
}

yN () {
    read -r -p "${1} (y/N): " ans
    [[ $ans = [yY] ]] && return 0 || return 1
}

command_exists () {
    type "$1" > /dev/null 2>&1
}


_install_pyenv () {
    if ! (command_exists ~/.pyenv/bin/pyenv); then
        if Yn "pyenv"; then
            sudo apt install build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
            curl https://pyenv.run | bash
        fi
    fi
}
_install_choosenim () {
    if ! (command_exists ~/.nimble/bin/choosenim); then
        if Yn "choosenim"; then
            curl https://nim-lang.org/choosenim/init.sh -sSf | sh
        fi
    fi
}

_install_rustup () {
    if ! (command_exists ~/.cargo/bin/rustup); then
        if Yn "rustup"; then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
        fi
    fi
}

_install_lsd () {
    if ! (command_exists lsd); then
        if command_exists cargo; then
            if Yn "lsd"; then
                cargo install lsd
            fi
        else
            echo "not found"
        fi
    fi
}

_install_rofi_theme () {
    if [ ! -f /usr/share/rofi/themes/materia.rasi ]; then
        if Yn "rofi theme"; then
            sudo curl -fLo /usr/share/rofi/themes/materia.rasi https://raw.githubusercontent.com/shaaaaaQ/materia-rofi-theme/master/materia.rasi
        fi
    fi
}

_install_fonts () {
    declare -A fonts=(
        ["Roboto-Regular.ttf"]="https://github.com/googlefonts/roboto/raw/HEAD/src/hinted/Roboto-Regular.ttf"
        ["Roboto-Mono-Nerd-Font-Complete.ttf"]="https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/RobotoMono/Regular/complete/Roboto%20Mono%20Nerd%20Font%20Complete.ttf"
        ["Hack-Regular-Nerd-Font-Complete-Mono.ttf"]="https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/Hack/Regular/complete/Hack%20Regular%20Nerd%20Font%20Complete%20Mono.ttf"
    )
    mkdir -p ~/.local/share/fonts
    for filename in "${!fonts[@]}"; do
        if [ ! -f ~/.local/share/fonts/"$filename" ]; then
            if Yn "$filename"; then
                curl -fLo ~/.local/share/fonts/"$filename" "${fonts[$filename]}"
            fi
        fi
    done
    fc-cache
}

_install_fcitx5_theme () {
    if [ ! -d ~/.local/share/fcitx5/themes/fcitx5-dark-transparent ]; then
        if Yn "fcitx5 theme"; then
            mkdir -p ~/.local/share/fcitx5/themes/fcitx5-dark-transparent
            git clone https://github.com/hosxy/fcitx5-dark-transparent.git ~/.local/share/fcitx5/themes/fcitx5-dark-transparent
        fi
    fi
}

_install_neovim () {
    if yN "neovim"; then
        local dir
        dir=$(mktemp -d /tmp/neovim-XXXXXX)
        sudo apt install ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip curl doxygen
        git clone --depth 1 https://github.com/neovim/neovim "$dir"
        cd "$dir"
        make CMAKE_BUILD_TYPE=RelWithDebInfo
        sudo make install
    fi
}

_setup_i3 () {
    sudo apt install xorg i3-wm slim alacritty picom rofi pulseaudio pavucontrol polybar feh xclip maim dunst gnome-keyring thunar thunar-archive-plugin xfce4-settings materia-gtk-theme papirus-icon-theme lxappearance fcitx5-mozc
    _install_rofi_theme
    _install_fonts
    _install_fcitx5_theme
}

sudo apt update
sudo apt install curl wget git cmake psmisc unzip build-essential pkg-config fish htop
_install_pyenv
_install_choosenim
_install_rustup
_install_lsd

case "${1:-}" in
    "nvim") _install_neovim ;;
    "i3") _setup_i3 ;;
    *) echo "nvim | i3" ;;
esac
